{"version":3,"sources":["scripts/main.js"],"names":["employeesList","document","querySelector","employeesItems","querySelectorAll","sortBySalary","employee1","employee2","salaryToNumber","elem","parseInt","dataset","salary","slice","replace","employeesSortedBySalary","sort","innerHTML","forEach","employee","appendChild","getEmployees","employees","employeesData","map","name","textContent","trim","position","age"],"mappings":";AAAA,aA2BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBA,IAAMA,EAAgBC,SAASC,cAAc,MACvCC,EAAqBH,EAAAA,EAAcI,iBAAiB,OACpDC,EAAe,SAACC,EAAWC,GAC/BC,OAAAA,EAAeD,GAAaC,EAAeF,IACvCE,EAAiB,SAACC,GACtBC,OAAAA,SAASD,EAAKE,QAAQC,OAAOC,MAAM,GAAGC,QAAQ,KAAM,MAChDC,EAA0BZ,EAAea,KAAKX,GAEpDL,EAAciB,UAAY,GAE1BF,EAAwBG,QAAQ,SAAAC,GAC9BnB,OAAAA,EAAcoB,YAAYD,KAE5B,IAAME,EAAe,SAASC,GAQrBC,OAPeD,EAAUE,IAAI,SAAAL,GAAa,MAAA,CAC/CM,KAAMN,EAASO,YAAYC,OAC3BC,SAAUT,EAASR,QAAQiB,SAC3BhB,OAAQO,EAASR,QAAQC,OACzBiB,KAAMV,EAASR,QAAQkB,QAM3BR,EAAalB","file":"main.0110b444.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst employeesList = document.querySelector('ul');\nconst employeesItems = [...employeesList.querySelectorAll('li')];\nconst sortBySalary = (employee1, employee2) =>\n  salaryToNumber(employee2) - salaryToNumber(employee1);\nconst salaryToNumber = (elem) =>\n  parseInt(elem.dataset.salary.slice(1).replace(/,/g, ''));\nconst employeesSortedBySalary = employeesItems.sort(sortBySalary);\n\nemployeesList.innerHTML = '';\n\nemployeesSortedBySalary.forEach(employee =>\n  employeesList.appendChild(employee));\n\nconst getEmployees = function(employees) {\n  const employeesData = employees.map(employee => ({\n    name: employee.textContent.trim(),\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: +employee.dataset.age,\n  }));\n\n  return employeesData;\n};\n\ngetEmployees(employeesItems);\n"]}